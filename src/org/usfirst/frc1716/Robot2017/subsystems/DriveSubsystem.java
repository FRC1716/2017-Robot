// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1716.Robot2017.subsystems;

import org.usfirst.frc1716.Robot2017.RobotMap;
import org.usfirst.frc1716.Robot2017.commands.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveSubsystem extends Subsystem {
	
	public final double WHEEL = 4 * Math.PI;
	public final int TICKS_PER_ROTATION = 550;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController frontLeft = RobotMap.driveSubsystemFrontLeft;
    private final SpeedController rearLeft = RobotMap.driveSubsystemRearLeft;
    private final SpeedController frontRight = RobotMap.driveSubsystemFrontRight;
    private final SpeedController rearRight = RobotMap.driveSubsystemRearRight;
    private final RobotDrive robotDrive = RobotMap.driveSubsystemRobotDrive;
    private final Encoder leftEncoder = RobotMap.driveSubsystemLeftEncoder;
    private final Encoder rightEncoder = RobotMap.driveSubsystemRightEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new Drive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public double getEncoder(boolean right){
    	if (right = true)
    		return rightEncoder.get();
    	else
    		return leftEncoder.get();
    }
    
    public void resetEncoders(){
    	leftEncoder.reset();
    	rightEncoder.reset();
    }
    
    public void drive(double left, double right){
    	robotDrive.tankDrive(left, right);
    }
    
    public void straightDrive(double speed, double offset){
    	speed = -speed;
    	if (leftEncoder.get() < rightEncoder.get())
    		drive(speed - offset, speed + offset);
    	else if (leftEncoder.get() > rightEncoder.get())
    		drive(speed + offset, speed - offset);
    	else
    		drive(speed, speed);
    }
}

