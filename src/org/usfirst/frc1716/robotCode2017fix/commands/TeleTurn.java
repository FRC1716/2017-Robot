// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1716.robotCode2017fix.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc1716.robotCode2017fix.Robot;

/**
 *
 */
public class TeleTurn extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	//Direction to turn (left or right)
	private boolean direction;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TeleTurn() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    
    public TeleTurn(boolean turnDirection)
    {
    	requires(Robot.driveTrain);
    	direction = turnDirection;
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	//Reset gyro to zero
    	Robot.sensors.resetGyro();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	//Turn the robot by setting the motors to equal but opposite values
    	if(direction)
    	{
    		Robot.driveTrain.drive(-0.8, 0.8);
    	}
    	else
    	{
    		Robot.driveTrain.drive(0.8, -0.8);
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	//Even though we want the robot to turn 180, we stop at greater than 140 in order to account for drift
    	//Stop when the gyro is greater than 140 or when the button is let go
    	if(direction)
    	{
    		if(Math.abs(Robot.sensors.getGyro()) > 140 || !Robot.oi.button_4_180.get())
    		{
    			return true;
    		}
    	}
    	else
    	{
    		if(Math.abs(Robot.sensors.getGyro()) > 140 || !Robot.oi.button_5_r180.get())
    		{
    			return true;
    		}
    	}
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.drive(0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
