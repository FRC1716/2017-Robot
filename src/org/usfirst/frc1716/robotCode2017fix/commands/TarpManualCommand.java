// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1716.robotCode2017fix.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc1716.robotCode2017fix.Robot;

/**
 *
 */
public class TarpManualCommand extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private boolean m_direction;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TarpManualCommand(boolean direction) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_direction = direction;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.tarpPID);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.tarpPID.getPIDController().disable();
    	
    	if(m_direction){
        	if (Robot.tarpPID.returnPIDInput() <= 95){
        		Robot.tarpPID.run(1);
        	}
    	}else{
    		if(Robot.tarpPID.returnPIDInput() >= 45){
    			Robot.tarpPID.run(-1);
    		}
    	}
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	
        if(m_direction){
        	
        	if (Robot.tarpPID.returnPIDInput() >= 95)
        		return true;
        	
        	return !Robot.oi.button_3_ManualWind.get();
        }else{
        	
        	if(Robot.tarpPID.returnPIDInput() <= 45)
        		return true;
        	
        	return !Robot.oi.button_2_ManualUnwind.get();
        }
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.tarpPID.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
