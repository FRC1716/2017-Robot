// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1716.robotCode2017fix.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc1716.robotCode2017fix.Robot;

/**
 *
 */
public class TeleStraight extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	private boolean direction;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TeleStraight() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    
    public TeleStraight(boolean driveDirection)
    {
    	requires(Robot.driveTrain);
    	direction = driveDirection;
    }
    

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.sensors.resetGyro();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if(direction)
    	{
    		Robot.driveTrain.drive(Robot.driveTrain.getSpeed(), 0.03 * (Robot.sensors.getGyro() - 26));
    	}
    	else
    	{
    		Robot.driveTrain.drive(-Robot.driveTrain.getSpeed(), 0.03 * (Robot.sensors.getGyro() + 26));
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	if(direction)
    	{
    		return !Robot.oi.button_5_driveStraight.get();
    	}
    	else
    	{
    		return !Robot.oi.button_4_rDriveStraight.get();
    	}
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.drive(0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
