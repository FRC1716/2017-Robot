// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1716.robotCode2017fix;

import org.usfirst.frc1716.robotCode2017fix.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;
import org.usfirst.frc1716.robotCode2017fix.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton button_1_Intake;
    public JoystickButton button_8_Reset;
    public JoystickButton button_3_ManualWind;
    public JoystickButton button_2_ManualUnwind;
    public Joystick rightJoystick;
    public JoystickButton button_3_Wind;
    public JoystickButton button_2_Unwind;
    public JoystickButton button_1_ReverseIntake;
    public Joystick leftJoystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton button_4_180;
    public JoystickButton button_5_driveStraight;
    public JoystickButton button_5_r180;
    public JoystickButton button_4_rDriveStraight;
    public JoystickButton button_10_climb;
    public JoystickButton button_11_rClimb;

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        leftJoystick = new Joystick(1);
        
        button_1_ReverseIntake = new JoystickButton(leftJoystick, 1);
        button_1_ReverseIntake.whenPressed(new RunIntakeCommand(false));
        button_2_Unwind = new JoystickButton(leftJoystick, 2);
        button_2_Unwind.whenPressed(new WindTarpCommand(35));
        button_3_Wind = new JoystickButton(leftJoystick, 3);
        button_3_Wind.whenPressed(new WindTarpCommand(100));
        rightJoystick = new Joystick(0);
        
        button_2_ManualUnwind = new JoystickButton(rightJoystick, 2);
        button_2_ManualUnwind.whenPressed(new TarpManualCommand(false));
        button_3_ManualWind = new JoystickButton(rightJoystick, 3);
        button_3_ManualWind.whenPressed(new TarpManualCommand(true));
        button_8_Reset = new JoystickButton(rightJoystick, 8);
        button_8_Reset.whenPressed(new ResetGyroCommand());
        button_1_Intake = new JoystickButton(rightJoystick, 1);
        button_1_Intake.whenPressed(new RunIntakeCommand(true));


        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("TeleOp Command", new TeleOpCommand());
        SmartDashboard.putData("ResetGyro Command", new ResetGyroCommand());
        SmartDashboard.putData("RunIntake Command: intake", new RunIntakeCommand(true));
        SmartDashboard.putData("RunIntake Command: output", new RunIntakeCommand(false));
        SmartDashboard.putData("WindTarp Command: wind", new WindTarpCommand(100));
        SmartDashboard.putData("WindTarp Command: unwind", new WindTarpCommand(35));
        SmartDashboard.putData("TarpManual Command: down", new TarpManualCommand(false));
        SmartDashboard.putData("TarpManual Command: up", new TarpManualCommand(true));
        SmartDashboard.putData("Forwards Command", new ForwardsCommand());
        SmartDashboard.putData("TurnDegrees Command", new TurnDegreesCommand());
        SmartDashboard.putData("AutonomousCG", new AutonomousCG());
        SmartDashboard.putData("TeleStraight", new TeleStraight());
        SmartDashboard.putData("TeleTurn", new TeleTurn());
        
        SmartDashboard.putNumber("Auto Pos", 1);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        button_4_180 = new JoystickButton(rightJoystick, 4);
        button_4_180.whenPressed(new TeleTurn(true));
        button_5_r180 = new JoystickButton(rightJoystick, 5);
        button_5_r180.whenPressed(new TeleTurn(false));
        button_5_driveStraight = new JoystickButton(leftJoystick, 5);
        button_5_driveStraight.whenPressed(new TeleStraight(true));
        button_4_rDriveStraight = new JoystickButton(leftJoystick, 4);
        button_4_rDriveStraight.whenPressed(new TeleStraight(false));
        
        button_10_climb = new JoystickButton(leftJoystick, 10);
        button_10_climb.whenPressed(new ClimbCommand(true));
        button_11_rClimb = new JoystickButton(leftJoystick, 11);
        button_11_rClimb.whenPressed(new ClimbCommand(false));
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getRightJoystick() {
        return rightJoystick;
    }

    public Joystick getLeftJoystick() {
        return leftJoystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

